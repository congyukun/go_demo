// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
)

// Injectors from wire.go:

// InitializeServer 使用 Wire 构建 Gin Engine 与清理函数
func InitializeServer(configPath string) (*gin.Engine, error) {
	config, err := ProvideConfig(configPath)
	if err != nil {
		return nil, err
	}
	appInit, err := ProvideAppInit(config)
	if err != nil {
		return nil, err
	}
	diAppReady := ProvideAppReady(appInit)
	db, err := ProvideDB(config)
	if err != nil {
		return nil, err
	}
	userRepository := ProvideRepositories(db)
	serviceConfig := ProvideServiceConfig(userRepository)
	authService := ProvideAuthServiceWithConfig(serviceConfig)
	userService := ProvideUserServiceWithConfig(serviceConfig)
	handlerConfig := ProvideHandlerConfig(authService, userService)
	authHandler := ProvideAuthHandlerWithConfig(handlerConfig)
	userHandler := ProvideUserHandlerWithConfig(handlerConfig)
	router := ProvideRouter(authHandler, userHandler)
	engine := ProvideGinEngineWithInit(diAppReady, router)
	return engine, nil
}

// wire.go:

// Sets
var baseSet = wire.NewSet(
	ProvideConfig,
	ProvideAppInit,
	ProvideAppReady,
)

var dataSet = wire.NewSet(
	ProvideDB,
	ProvideCache,
	ProvideRepositories,
)

var serviceSet = wire.NewSet(
	ProvideServiceConfig,
	ProvideAuthServiceWithConfig,
	ProvideUserServiceWithConfig,
)

var handlerSet = wire.NewSet(
	ProvideHandlerConfig,
	ProvideAuthHandlerWithConfig,
	ProvideUserHandlerWithConfig,
)

var routerSet = wire.NewSet(
	ProvideRouter,
	ProvideGinEngineWithInit,
)

version: '3.8'

services:
  # Go 应用服务
  app:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
    container_name: go-demo-app
    ports:
      - "8081:8081"
    environment:
      - CONFIG_PATH=/app/configs/config.yaml
    volumes:
      - ../logs:/root/logs
      - ../configs:/root/configs
    depends_on:
      - mysql
      - redis
    networks:
      - go-demo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: go-demo-mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: go_test
      MYSQL_USER: demo_user
      MYSQL_PASSWORD: demo_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - go-demo-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Redis 缓存服务
  redis:
    image: redis:7-alpine
    container_name: go-demo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - go-demo-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: go-demo-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ../logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - go-demo-network
    restart: unless-stopped

# 数据卷
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

# 网络
networks:
  go-demo-network:
    driver: bridge